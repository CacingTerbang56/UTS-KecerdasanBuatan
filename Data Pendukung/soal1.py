# -*- coding: utf-8 -*-
"""Sistem Pakar Tanaman.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/11oyB-XaSUCIDsmJZTVRnw2QI4dvApkZA
"""

!pip install experta

!pip install --upgrade frozendict

from experta import *

class Diagnosis(KnowledgeEngine):
    @Rule(Fact(daun_menguning=True) & Fact(bercak_hitam=True) & Fact(tanaman_layu=False))
    def penyakit1(self):
        print("Sepertinya tanaman anda terkena penyakit hawar daun.")
        self.declare(Fact(diagnosed=True))

    @Rule(Fact(daun_menguning=True) & Fact(tanaman_layu=True) & Fact(bercak_hitam=False))
    def penyakit2(self):
        print("Sepertinya tanaman anda terserang bakteri Fusarium.")
        self.declare(Fact(diagnosed=True))

    @Rule(Fact(daun_berlubang=True) & Fact(tanaman_layu=True))
    def hama1(self):
        print("Tanaman anda kemungkinan dimakan ulat daun.")
        self.declare(Fact(diagnosed=True))

    @Rule(Fact(bercak_hitam=True) & Fact(tanaman_layu=True) & Fact(daun_menguning=False))
    def penyakit3(self):
        print("Tanaman anda mungkin terjangkit penyakit antraknosa.")
        self.declare(Fact(diagnosed=True))

    @Rule(Fact(daun_menguning=True) & Fact(tanaman_layu=True) & Fact(bercak_hitam=True))
    def hama2(self):
        print("Tanaman anda mungkin diserang oleh thrips.")
        self.declare(Fact(diagnosed=True))

    @Rule(Fact(daun_menguning=False) & Fact(tanaman_layu=False) & Fact(daun_berlubang=False) & Fact(bercak_hitam=False))
    def healthy(self):
        print("Tanaman anda tampak sehat.")
        self.declare(Fact(diagnosed=True))

    @Rule(NOT(Fact(diagnosed=True)), salience=-10)
    def default_diagnosis(self):
        print("Gejala yang terdeteksi tidak cocok dengan data yang ada. Silakan periksa kembali atau konsultasikan lebih lanjut.")

def get_input():
    def ask_question(question):
        return input(question + " (yes/no): ").strip().lower() == "yes"

    return {
        "bercak_hitam": ask_question("Apakah tanaman anda memiliki bercak hitam?"),
        "daun_menguning": ask_question("Apakah daun tanaman anda menguning?"),
        "daun_berlubang": ask_question("Apakah daun tanaman berlubang?"),
        "tanaman_layu": ask_question("Apakah tanaman anda tampak layu?")
    }

if __name__ == "__main__":
    symptoms = get_input()
    engine = Diagnosis()
    engine.reset()

    for symptom, present in symptoms.items():
        engine.declare(Fact(**{symptom: present}))

    engine.run()